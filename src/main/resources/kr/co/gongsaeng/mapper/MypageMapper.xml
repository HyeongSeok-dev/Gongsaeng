<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="kr.co.gongsaeng.mapper.MypageMapper">

	<select id="selectMemberInfo" resultType="member">
		SELECT *
		FROM member
		WHERE member_id = #{member_id}
	</select>
	
	<update id="updateMemberInfo">
		UPDATE member
		SET 
			member_nick = #{member_nick}
		<if test="!member_passwd.equals('')">
			,member_passwd = #{member_passwd}
		</if>
			,member_name = 	#{member_name}
			,member_email = #{member_email}
			,member_phone = #{member_phone}
		<if test="!member_img.equals('')">
			,member_img = #{member_img}
		</if>
			
		WHERE member_id = #{member_id}
	</update>
	
	<update id="updateMemberStatus">
		UPDATE member
		SET member_status = '3'
		WHERE member_id = #{member_id}
	</update>


	<select id="selectMyMainView" resultType="map">
		SELECT * 
		FROM my_main_view
		WHERE member_id = #{member_id}
	</select>
	
	<select id="selectUnreadChatInfo" resultType="map">
		SELECT * 
		FROM chat
		WHERE chat_receiver = #{member_nick}
<!-- 		열람여부 확인 and절 필요 -->
	</select>
	
	<select id="selectUnreadAlertInfo" resultType="map">
		SELECT * 
		FROM alert
		WHERE member_id = #{member_id}
<!-- 		열람여부 확인 and절 필요 -->
	</select>
	
	<select id="selectBookmarkInfo" resultType="map">
		SELECT b.bookmark_idx,b.member_id, c.class_idx, c.class_pic1, c.class_title,co.com_name
		FROM bookmark b
		JOIN class c ON c.class_idx = b.class_idx 
		JOIN company co ON co.member_id = c.member_id 
		WHERE b.member_id = #{member_id}
	</select>
	
	<select id="selectFollowingInfo" resultType="map">
		SELECT co.com_idx, co.com_name, co.com_img, co.com_introduction,f.following_idx,
	    (SELECT c.class_pic1 FROM class c WHERE co.member_id = c.member_id LIMIT 1) as class_image1,
	    (SELECT c.class_pic1 FROM class c WHERE co.member_id = c.member_id LIMIT 1 OFFSET 1) as class_image2,
	    (SELECT c.class_pic1 FROM class c WHERE co.member_id = c.member_id LIMIT 1 OFFSET 2) as class_image3
	    FROM following f
	    JOIN company co ON f.com_idx = co.com_idx
	    JOIN class c ON co.member_id = c.member_id
	    WHERE f.member_id = #{member_id}
	    GROUP BY f.following_idx, co.com_idx
	</select>


	<select id="selectResList" resultType="myRes">
		select pay_num, p.com_idx,p.class_idx, p.member_id ,payment,discount_payment,pay_method,pay_date,pay_status,class_pic1,com_name,class_title,p.res_visit_date,p.res_visit_time,p.res_request,p.res_member_count,c.class_start_time,c.class_end_time,c.class_category,c.class_start_date,c.class_end_date
		FROM payment p
		JOIN class c ON c.class_idx = p.class_idx 
		JOIN company co ON co.com_idx = p.com_idx 
		WHERE p.member_id = #{member_id}
		
	</select>
	
	<select id="selectResInfo" resultType="myRes">
		select pay_num, p.com_idx,p.class_idx, p.member_id ,payment,discount_payment,pay_method,pay_date,pay_status,class_pic1,com_name,class_title,com_post_code, com_address1,com_address2, member_name, member_phone,p.res_visit_date,p.res_visit_time,p.res_request,p.res_member_count,c.class_start_time,c.class_end_time,c.class_category,c.class_start_date,c.class_end_date
		FROM payment p
		JOIN class c ON c.class_idx = p.class_idx 
		JOIN company co ON co.com_idx = p.com_idx 
		JOIN member m ON m.member_id = p.member_id 
		WHERE p.pay_num = #{pay_num}
	</select>
	<select id="selectAlertList" resultType="map">
		SELECT * 
		FROM alert
		WHERE member_id = #{member_id}
	</select>
	
	<select id="selectCouponList" resultType="map">
		SELECT * 
		FROM coupon
		WHERE member_id = #{member_id}
		AND coupon_status = '1'
	</select>
	
	<select id="selectCashList" resultType="map">
		SELECT * 
		FROM cash
		WHERE member_id = #{member_id}
	</select>
	
	<select id="selectPointList" resultType="map">
		SELECT * 
		FROM point
		WHERE member_id = #{member_id}
	</select>
	
	<delete id="deleteBookmark">
		DELETE FROM bookmark
		WHERE bookmark_idx = #{bookmark_idx}
	</delete>
	<delete id="deletefollowing">
		DELETE FROM following
		WHERE following_idx = #{following_idx}
	</delete>
	
	<insert id="insertReportClass">
		INSERT INTO report
		VALUES(
			null
			,null
			,#{class_idx}
			,#{member_id}
			,#{report_reason}
			,#{report_content}
			,#{member_email}
			,1
			,#{member_phone}
			,2
			,now()
		)
	</insert>
	
	<select id="selectMyCommunityList" resultType="map">
		SELECT b.board_idx, b.member_id, board_subject,board_content,board_date,board_main_category,board_sub_category,board_img1,board_img2,board_img3,count(reply_idx) as reply_count
		FROM board b			
		LEFT JOIN tiny_reply_community t ON b.board_idx = t.board_idx
		WHERE b.member_id = #{member_id}
		AND (b.board_main_category = 5 OR b.board_main_category = 6)
		GROUP BY b.board_idx
	</select>
	
	<update id="updatePayStatusForCancel">
		UPDATE payment
		SET pay_status = 2
		WHERE pay_num = #{pay_num}
	</update>
	
	<select id="selectPayInfo" resultType="map">
		SELECT *
		FROM payment
		WHERE pay_num = #{pay_num}
	</select>
	
	<insert id="insertCashForCancel">
		INSERT INTO cash
		VALUES(
			null
			,#{member_id}
			,#{payment}
			,4
			,#{pay_num}
			,now()
		)
	</insert>
	
	<delete id="deleteAlert">
		DELETE FROM alert
		WHERE alert_idx = #{alert_idx}
	</delete>
</mapper>