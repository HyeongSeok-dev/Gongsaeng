<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.gongsaeng.mapper.CompanyMapper">

	<!-- 회원 아이디정보 조회(SELECT) -->
	<select id="selectMember" resultType="member">
		SELECT *
		FROM member
		WHERE member_id = #{member_id}
	</select>
	
	<!-- 반장 회원등록(INSERT) -->
	<insert id="insertCompany" >
		INSERT
		INTO company
		VALUES (
			null
			,#{com_img}
			,#{member_id}
			,#{com_name}
			,#{com_category}
			,#{com_post_code}	
			,#{com_address1}	
			,#{com_address2}	
			,#{com_tel}	
			,#{com_email}	
			,#{com_introduction}	
			,#{com_bank}	
			,#{com_account}	
			,#{com_account_name}	
			,2	
			,now()
		)
	</insert>
	
	<!-- member_id로 com_idx 찾기 (SELECT) -->
	<select id="findComIdxBysId" resultType="int">
		SELECT com_idx
		FROM company
		WHERE member_id = #{member_id}
	</select>
	
	<!-- com_idx로 매출내역 출력 -->
	<select id="selectSaleList" parameterType="Integer" resultType="map">
		SELECT *
		FROM payment
		WHERE com_idx = #{comIdx}
	</select>
	
	<!-- 클래스명 출력(매출내역) -->
	<select id="selectClassTitle" resultType="String">
	    SELECT class_title
	    FROM class
	    WHERE class_idx = #{classIdx}
	</select>
	
	<!-- 매출내역 삭제 -->
	<delete id="deleteSaleList" parameterType="String">
		DELETE
		FROM payment
		WHERE pay_num = #{payNum}
	</delete>
	
	<!-- 정산내역 계산 -->
	<select id="selectIncome" parameterType="map">
		SELECT COALESCE(SUM(payment),0) * 0.9 AS totalIncome
		FROM payment
		WHERE com_idx = #{comIdx}
		AND pay_cal_status = 1
	</select>
	
	<!-- 계좌 정보 출력 -->
	<select id="selectCompanyAccountInfo" resultType="company">
		SELECT *
		FROM company
		WHERE com_idx = #{comIdx}
	</select>
	
	<!-- 정산내역 출력 -->
	<select id="selectCompanyPaymentInfo" resultType="payment">
		SELECT *
		FROM payment
		WHERE com_idx = #{comIdx}
	</select>
	
	<!-- 정산신청 상태 변경 -->
	<update id="updatePayCalStatus">
	    UPDATE payment
	    SET 
	    	pay_cal_status = #{payCalStatus}
   	        ,refund_request_date = NOW() <!-- 현재 타임스탬프로 업데이트 -->
	    WHERE pay_num = #{payNum}
	</update>
	
<!-- 	회원목록 출력 -->
<select id="selectCompanyClassMember" resultType="companyClass">
  <![CDATA[
    SELECT *, 
        CASE 
            WHEN class_start_date > CURRENT_DATE THEN '진행예정'
            WHEN class_end_date >= CURRENT_DATE THEN '진행중'  -- class_end_date가 오늘을 포함하여 그 이후인 경우
            ELSE '종료'
        END AS classStatus
    FROM ViewPaymentClassMember2
    WHERE com_idx = #{comIdx}
    ORDER BY 
        CASE 
            WHEN class_start_date > CURRENT_DATE THEN 2  -- 진행예정
            WHEN class_end_date >= CURRENT_DATE THEN 1  -- 진행중
            ELSE 3  -- 종료
        END,
        class_start_date ASC  -- 시작 날짜 기준 추가 정렬
  ]]>
</select>

	<!-- 리뷰 목록 출력 -->
	<select id="selectCompanyReviewDetail" resultType="companyReview">
		SELECT *
		FROM review_details	
		WHERE com_idx = #{comIdx}
	</select>
	
	<!-- 정산완료 내역 합계 -->
	<select id="selectSumPayment" resultType="Integer">
		SELECT COALESCE(SUM(payment),0)
		FROM payment
    	WHERE pay_cal_status = 4 AND com_idx = #{comIdx}
	</select>
	
	<!-- 메인 - (1-1) 월별매출(클래스 판매 금액) -->
	<select id="selectSumMonthlySales" resultType="Integer">
		SELECT SUM(payment) AS totalMonthlyPayment
		FROM payment
		WHERE com_idx = #{comIdx} 
			AND MONTH(pay_date) = MONTH(CURRENT_DATE())
	</select>

	<!-- 메인 - (1-2) 월별매출(할인쿠폰 금액) -->
<!-- 	<select id="selectSumMonthlyCoupons" resultType="Integer"> -->
<!-- 		SELECT SUM(discount_payment) AS totalMonthlyCoupons -->
<!-- 		FROM payment -->
<!-- 		WHERE com_idx = #{comIdx}  -->
<!-- 			AND MONTH(pay_date) = MONTH(CURRENT_DATE()) -->
<!-- 	</select> -->
		<select id="selectSumMonthlyCoupons" resultType="Integer">
		    SELECT COALESCE(SUM(discount_payment), 0) AS totalMonthlyCoupons
		    FROM payment
		    WHERE com_idx = #{comIdx} 
		        AND MONTH(pay_date) = MONTH(CURRENT_DATE())
		        AND YEAR(pay_date) = YEAR(CURRENT_DATE())
		</select>
	
	<!-- 메인 - (2-1) 클래스 누적 정산 금액(클래스 총 정산 금액) -->
	<select id="selectSumTotalSales" resultType="Integer">
	    SELECT COALESCE(SUM(payment), 0) AS totalPayment
	    FROM payment
	    WHERE com_idx = #{comIdx}
	</select>
	
	<!-- 메인 - (2-2) 클래스 누적 정산 금액(클래스 총 환불 금액) -->
	<select id="selectSumTotalRefund" resultType="Integer">	
		SELECT COALESCE(SUM(payment),0) AS totalRefund
		FROM payment
		WHERE com_idx = #{comIdx} AND pay_status = 2
	</select>
	
	<!-- 메인 - (3-1) 월간 클래스 등록 현황 -->
	<select id="selectSumMonthlyNumberOfClass" resultType="Integer">
		SELECT COALESCE(COUNT(pay_num),0) AS montlyNumberOfClass
		FROM payment
		WHERE com_idx = #{comIdx} 
			AND MONTH(pay_date) = MONTH(CURRENT_DATE())
	</select>
	
	<!-- 메인 (4-1) 월간 클래스 취소 현황(취소 건수) -->
	<select id="selectCountMonthlyCancelClass" resultType="Integer">
		SELECT COALESCE(COUNT(payment),0) AS monthlyNumberOfCancel
		FROM payment
		WHERE com_idx = #{comIdx}
			AND MONTH(pay_date) = MONTH(CURRENT_DATE())
			AND pay_status = 2
	</select>
	
	<!-- 메인 - (4-2) 월간 클래스 취소 현황(취소 금액) -->
	<select id="selectSumMonthlyCancelClass" resultType="Integer">
		SELECT COALESCE(SUM(payment),0) AS mothlySumOfCancel
		FROM payment
		WHERE com_idx = #{comIdx}
			AND MONTH(pay_date) = MONTH(CURRENT_DATE())
			AND pay_status = 2
	</select>
	
	<!-- 메인 - (5-1) 운영중인 클래스 현황 -->
	<select id="selectCountClass" resultType="Integer">
    <![CDATA[
        SELECT COALESCE(COUNT(class_idx),0) AS NumberOfClass
        FROM class
        WHERE member_id = #{member_id}
            AND class_start_date <= CURDATE()
            AND class_end_date >= CURDATE()
    ]]>
	</select>
	<!-- <![CDATA[ 와 ]]> 사이에 SQL 쿼리를 넣으면, 해당 쿼리는 XML 파서에 의해 처리되지 않고 그대로 유지 -->
	
	
	<!-- 메인 - (6) 클래스 신고 현황 -->
	<select id="countReport" resultType="Integer">
		SELECT
		    vrc.report_count
		FROM
		    ViewReportCountByCompany vrc
		JOIN
		    company co ON vrc.com_idx = co.com_idx
		WHERE
		    co.member_id = #{member_id} AND report_category = 2
	</select>
	
	<!-- 메인 - (7) 작가 공지사항 -->
	<select id="getCompanyBoard" resultType="board">
		SELECT *
		FROM board
		WHERE 
			board_main_category = 1 AND
			board_sub_category = 2
		ORDER BY board_date DESC
		LIMIT 5	
	</select>
	
	<!-- 신고 세부사항 -->
	<select id="selectReportDetail" resultType="reportDetail">
		SELECT *
		FROM ViewReportDetailByCompany vrdc
		WHERE
		    member_id = #{sId} AND report_category = 2
	</select>
	
	<!-- 차트(1. 일별매출) -->
	<select id="selectRecentSales" resultType="payment">
<!-- 	SELECT  -->
<!-- 	    MONTH(pay_date) AS payMonth, -->
<!-- 	    YEAR(pay_date) AS payYear, -->
<!-- 	    SUM(payment) AS totalSales -->
<!-- 	FROM  -->
<!-- 	    payment -->
<!-- 	WHERE  -->
<!-- 	    com_idx = #{comIdx} -->
<!-- 	    AND pay_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 12 MONTH) AND CURDATE() -->
<!-- 	    AND pay_status = 1  -->
<!-- 	GROUP BY  -->
<!-- 	    YEAR(pay_date), MONTH(pay_date) -->
<!-- 	ORDER BY  -->
<!-- 	    YEAR(pay_date), MONTH(pay_date);	 -->
		SELECT 
		    DATE(pay_date) AS payDate,
		    SUM(payment) AS totalSales
		FROM 
		    payment
		WHERE 
		    com_idx = #{comIdx}
		    AND pay_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 10 DAY) AND CURDATE()
		    AND pay_status = 1 
		GROUP BY 
		    DATE(pay_date)
		ORDER BY 
		    DATE(pay_date);

	</select>


	<!-- 차트 (2. 일별 클래스 결제 갯수) -->
	<select id="selectDailyClass" resultType="payment">
	SELECT
    DATE(pay_date) AS payment_date,
    COUNT(pay_num) AS total_payments
	FROM
	    payment
	WHERE
	    com_idx = #{comIdx}
	    AND pay_status = 1
        AND pay_date >= DATE_SUB(NOW(), INTERVAL 10 DAY)
	GROUP BY
	    DATE(pay_date)
	ORDER BY
	    payment_date;
	</select>
	
	<!-- 차트 (3. 성별 비율) -->
	<select id="selectGenderRatio" resultType="genderRatio">
	SELECT
	  m.member_gender,
	  COUNT(*) AS count
	FROM
	  payment p
	JOIN member m ON p.member_id = m.member_id
	WHERE
	  p.com_idx = #{comIdx}
	  AND p.pay_status = 1 
	GROUP BY
	  m.member_gender
	</select>
	
	<!-- 차트 (4. 취소 건수) -->
	<select id="selectCountCancel" resultType="payment">
	    SELECT
        DATE(pay_date) AS cancelDate,
        COUNT(*) AS cancelCount
    FROM
        payment
    WHERE
        com_idx = #{comIdx}
        AND pay_status = 2 
        AND pay_date >= DATE_SUB(NOW(), INTERVAL 10 DAY)
    GROUP BY
        DATE(pay_date)
    ORDER BY
        cancelDate ASC
	
	</select>
		
	<!-- 반장 쿠폰 조회 -->	
	<select id="selectClassCoupon" resultType="coupon">
		SELECT *
		FROM coupon
		WHERE com_idx = #{comIdx}
	</select>
	
	
	<!-- 메인 - (7) 작가 공지사항 -->
	<select id="selectNotificationList" resultType="board">
		SELECT *
		FROM board
		WHERE 
			board_main_category = 1 AND
			board_sub_category = 2
		ORDER BY board_date DESC
	</select>
	
	<!-- 반장 프로필 조회 -->
	<select id="selectCompanyProfile" resultType="company">
		SELECT * 
		FROM company
		WHERE com_idx = #{comIdx}
	</select>
	
	<!-- 멤버 카테고리 제한(2) -->
	<select id="selectMemberCategory" resultType="Integer">
		SELECT member_category
		FROM member
		WHERE member_id = #{sId}
	</select>
	
	<!-- 매출내역 - 회사명 출력 -->
	<select id="selectComName" resultType="String">
		SELECT com_name
		FROM company
		WHERE com_idx = #{comIdxFromSale}
	</select>
	
	<!-- 정산 세부내역 -->
	<select id="selectPaymentByPayNum" resultType="payment">
		SELECT *
		FROM payment
		WHERE pay_num = #{payNum}
	</select>
	
	<!-- 메인페이지 회사명 출력 -->
	<select id="selectCompanyName" resultType="String">
		SELECT com_name
		FROM company
		WHERE member_id = #{sId}
	</select>
	
	
</mapper>